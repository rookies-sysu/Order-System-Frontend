<style>
  /* #a0 {
      margin-top:10rpx;
    } */
  .mainContainer {
    height: 400rpx;
    width: 100%;
  }
  .recommend_scroll_x_box {
    margin-top: 20rpx;
    height: 1000rpx;
    overflow: hidden;
    /* white-space: nowrap;  */
    /* display: flex; */
  }
  .itemSelf {
    position: absolute;
    box-sizing: border-box;
    overflow: hidden;
    padding: 25rpx;
    padding-top: 15rpx;
    height: 100%;
    width: 100%;
    color: white;
  }
  .content {
    width: 500px;
    margin-top: 10rpx;
    margin-left: 20rpx;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    border-bottom: 1px solid #e3e3e3;
    will-change: transform;
  }
  .food-type {
    font-family: 'SimHei';
    font-weight: bold;
    margin-left: 50rpx;
    padding: 4rpx;
  }
  .food-type-other {
    font-family: 'SimHei';
    font-weight: bold;
    margin-top: 30rpx;
    margin-left: 40rpx;
    padding: 4rpx;
  }
  .list-image-box {
    width: 90px;
    height: 90px;
    text-align: center;
  }
  .content-list {
    margin-left: 10rpx;
    width: 100px;
    display: flex;
    flex-direction: row;
    /* flex-flow: row wrap; */
  }
  .list-image {
    width: 70px;
    height: 70px;
    border-radius: 10px;
    margin-top: 5rpx;
  }
  .food-name {
    width: 200px;
    font-size: 25rpx;
    font-weight: bold;
    font-family: 'SimHei';
    margin-top: 20rpx;
  }
  .content-number {
    float: right;
  }
  .plus-icon {
    margin-left: 4px;
    float: right;
    font-size: 39rpx;
    font-weight: bold;
    color: #222;
  }
  .list-minus {
    font-size: 35rpx;
    font-weight: bold;
    color: #222;
    margin-right: 5px;
  }
  .item-number {
    font-weight: bold;
    font-size: 32rpx;
    margin-right: 5px;
  }
</style>

<template>
  <scroll-view scroll-y="true" class="recommend_scroll_x_box">
    <view id="a{{index}}" wx:for="{{listData}}" wx:key="unique" style="width:{{styleValue[index]}}px;" data-type="{{index}}">
      <view class="{{index===0?'food-type':'food-type-other'}}">{{item.name}}</view>
      <view class="content" style="width:{{styleValue[0]}}px;" data-type="{{index}}" animation="{{swiperAnmiation[index]}}" bindtouchstart="menuTouchstart" bindtouchmove="menuTouchmove" bindtouchend="menuTouchend">
        <view class='content-list' wx:for="{{item.foods}}" wx:key="unique" wx:for-item="items" wx:for-index="indexs" style="width:{{screenWidth-reduceDistance}}px;">
          <view class='list-image-box'>
            <view class="list-image" src='{{items.image_url}}'></view>
          </view>
          <view class='food-name'>
            <view>{{items.name}}</view>
            <view class='food-price'>
              ¥ {{items.price}}.00
              <view class="content-number">
                <i class="iconfont icon-minus list-minus" data-type="{{index}}" data-index="{{indexs}}" catchtap="minusFromMenu" wx:if="{{items.number!==0?true:false}}"></i>
                <span wx:if="{{items.number!==0?true:false}}" class="item-number"> {{items.number}} </span>
                <i class="iconfont icon-add plus-icon" data-type="{{index}}" data-index="{{indexs}}" catchtap="addToCart"></i>
                <view style="height:200px;" wx:if="{{index===listData.length-1&&indexs===item.foods.length-1}}"></view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </scroll-view>
</template>

<script>
  import wepy from 'wepy'
  export default class Menu extends wepy.page {
    data = {
      hSwiperVar: {},
      menuSwiperVar: {},
      listData: [],
      foodTypes: 0,
      activeIndex: 0,
      toView: 'a1',
      scrollTop: 300,
      // screenWidth: 667,
      showModalStatus: false,
      currentType: 0,
      currentIndex: 0,
      cartList: [],
      tolMoney: 0,
      foodNumber: 0,
      loading: true,
      foodTypeList: {},
      styleValue: {},
      reduceDistance: 60,
      itemWidth: 0,
      startPos: 0,
      touchTime: 0,
      endPos: 0,
      nowTranX: 0,
      nowView: {},
      swiperAnmiation: {}
    }

    config = {
      navigationBarTitleText: 'Menu'
    }

    onLoad() {
      var that = this
      // var sysinfo = wepy.getSystemInfoSync().windowHeight
      // console.log(sysinfo)
      wepy.request({
        /* 自己写的json数据的网址 */
        url: 'https://www.easy-mock.com/mock/5ab2750509c2ed0d826ee129/example/hippo',
        method: 'GET',
        data: {},
        header: {
          'Accept': 'application/json'
        },
        success: function(res) {
          wepy.hideLoading()
          // console.log(res)
          that.setData({
            listData: res.data,
            loading: false
          })
          that.initialData()
        }
      })
    }
    initialData() {
      var listData = this.data.listData
      var count = listData.length
      for (let i = 0; i < count; i++) {
        this.setData({
          ['foodTypeList.a' + i]: listData[i].foods.length,
          ['styleValue.' + i]: 2 * (this.data.itemWidth + 10),
          ['nowView.' + i]: 0
        })
      }
    }
    onShow(options) {
      var that = this
      wepy.getStorage({
        key: 'cartList',
        success: function(res) {
          // console.log(res.data)
          that.setData({
            cartList: res.data
          })
          that.changeFoodNum()
        }
      })
      wepy.getStorage({
        key: 'tolMoney',
        success: function(res) {
          // console.log(res.data)
          that.setData({
            tolMoney: res.data
          })
        }
      })
    }
    changeFoodNum() {
      var that = this
      var loading = that.data.loading
      if (!loading) {
        var listData = that.data.listData
        var foodNum = this.data.cartList.length
        var cartList = this.data.cartList
        var _type = 0
        var _index = 0
        for (let i = 0; i < foodNum; i++) {
          _type = cartList[i].type
          _index = cartList[i].index
          listData[_type].foods[_index].number = cartList[i].number
        }
        if (foodNum === 0) {
          for (let i = 0; i < listData.length; i++) {
            for (var j = 0; j < listData[i].foods.length; j++) {
              listData[i].foods[j].number = 0
            }
          }
        }
        that.setData({
          listData: listData
        })
      }
    }
    menuTouchstart(e) {
      // console.log(e)
      this.setData({
        startPos: e.touches[0].clientX,
        touchTime: e.timeStamp
      })
    }
    menuTouchmove(e) {
      // console.log(e)
      var self = this
      var id = e.currentTarget.dataset.type
      this.setData({
        endPos: e.touches[0].clientX
      })
      var delta = self.data.endPos - self.data.startPos
      this.menuMovePos(id, delta)
    }
    menuTouchend(e) {
      // console.log(e)
      var self = this
      var id = e.currentTarget.dataset.type
      var delta = e.changedTouches[0].clientX - self.data.startPos
      var times = e.timeStamp - self.data.touchTime
      var distance = Math.abs(delta)
      if (times < 500 && distance > 50) {
        if (!((e.changedTouches[0].clientX - self.data.startPos) > 0)) {
          this.nextView(id)
        } else {
          this.preView(id)
        }
      } else if (distance > 0) {
        this.menuMovePos(id, delta)
        var nowtranX = this.data.nowTranX
        var endpos = self.data.endPos
        var startpos = self.data.startPos
        this.setData({
          endPos: e.changedTouches[0].clientX,
          nowTranX: nowtranX + (endpos - startpos)
        })
        self.moveViewTo(id, self.getNowView(id))
      }
    }
    menuMovePos(id, x) {
      // var len = Math.ceil(this.data.listData[id].foods.length/2)
      var len = 2
      var tempPos = this.data.nowTranX + x
      var count = len > 0 ? len : 1
      var minPos = -this.data.itemWidth * (count - 1) - 20
      var maxPos = 20
      // 最大的位置
      if (tempPos > maxPos) {
        tempPos = maxPos
      }
      if (tempPos < minPos) {
        tempPos = minPos
      }
      // console.log("tempPos="+tempPos)
      this.updateMoveAnimation(id, tempPos)
    }
    updateMoveAnimation(id, x) {
      // console.log(x)
      var animation = wepy.createAnimation({
        transformOrigin: '50% 50%',
        duration: 0,
        timingFunction: 'ease',
        delay: 0
      })
      animation.translateX(x).translate3d(0).step()
      this.setData({
        ['swiperAnmiation.' + id]: animation.export()
      })
    }
    getNowView(id) {
      var maxIndex = 1
      var indexView = this.data.nowView[id]
      // var maxIndex = this.data.listData[id].length - 1
      // var indexView = Math.abs(Math.round(this.nowTranX / this.itemWidth /3))
      if (this.data.nowTranX > 0) {
        return 0
      }
      indexView = indexView > 0 ? indexView : 0
      indexView = indexView > maxIndex ? maxIndex : indexView
      return indexView
    }
    nextView(id) {
      var index = parseInt(this.data.nowView[id]) + 1
      index = index > 1 ? 1 : index
      this.setData({
        ['nowView.' + id]: index
      })
      this.moveViewTo(id, index)
      return index
    }
    preView(id) {
      var index = this.data.nowView[id] - 1
      index = index < 0 ? 0 : index
      this.setData({
        ['nowView.' + id]: index
      })
      this.moveViewTo(id, index)
      return index
    }
    moveViewTo(id, viewIndex) {
      this.setData({
        nowTranX: viewIndex === 1 ? -(this.data.itemWidth) * viewIndex - 5 : (this.data.itemWidth) * viewIndex,
        ['nowView.' + id]: viewIndex
      })
      this.updateViewAnimation(id, this.data.nowTranX)
    }
    updateViewAnimation(id, x) {
      var animation = wepy.createAnimation({
        transformOrigin: '50% 50%',
        duration: 300,
        timingFunction: 'ease-in-out',
        delay: 0
      })
      animation.translateX(x).translate3d(0).step()
      this.setData({
        ['swiperAnmiation.' + id]: animation.export()
      })
    }
    /**
     * 右侧页面滚动
     */
    scroll(e) {
      var dis = e.detail.scrollTop
      var tabHeight = 17
      var contentHeight = 73
      var listData = this.data.listData
      var count = listData.length
      var up = contentHeight * (listData[0].foods.length - 1) + tabHeight
      var down = 0
      var index = count - 1
      for (var i = 1; i < count; i++) {
        if (dis >= down && dis < up) {
          index = i - 1
          // console.log(index)
          break
        } else {
          down = up
          up += contentHeight * (listData[i].foods.length) + tabHeight
        }
      }
      if (index >= count / 2) {
        wepy.pageScrollTo({
          scrollTop: 100
        })
      }
      this.setData({
        activeIndex: index
      })
    }
    /**
     * 添加到购物车
     */
    addToCart(e) {
      // console.log(e)
      var type = e.currentTarget.dataset.type
      var index = e.currentTarget.dataset.index
      var selectedItem = this.data.listData[type].foods[index]
      // console.log(selectedItem.number)
      var listData = this.data.listData
      var number = selectedItem.number + 1
      for (let i = 0; i < listData.length; i++) {
        for (var j = 0; j < listData[i].foods.length; j++) {
          if (listData[i].foods[j].name === selectedItem.name) {
            listData[i].foods[j].number = number
          }
        }
      }
      this.setData({
        currentType: type,
        currentIndex: index,
        listData: listData
      })
      var a = this.data
      var unselected = true
      var cartList = this.data.cartList
      var sum
      for (let i = 0; i < cartList.length; i++) {
        if (cartList[i].name === selectedItem.name) {
          sum = this.data.tolMoney + selectedItem.price
          cartList[i].sum += selectedItem.price
          cartList[i].number += 1
          unselected = false
        }
      }
      if (unselected) {
        var addItem = {
          'name': a.listData[a.currentType].foods[a.currentIndex].name,
          'price': a.listData[a.currentType].foods[a.currentIndex].price,
          'number': number,
          'sum': a.listData[a.currentType].foods[a.currentIndex].price,
          'type': type,
          'index': index
        }
        sum = a.tolMoney + a.listData[a.currentType].foods[a.currentIndex].price
        cartList.push(addItem)
      }
      this.setData({
        cartList: cartList,
        tolMoney: sum,
        foodNumber: a.foodNumber + 1
      })
    }
    minusFromMenu(e) {
      var type = e.currentTarget.dataset.type
      var index = e.currentTarget.dataset.index
      var selectedItem = this.data.listData[type].foods[index]
      var listData = this.data.listData
      var number = selectedItem.number - 1
      for (let i = 0; i < listData.length; i++) {
        for (var j = 0; j < listData[i].foods.length; j++) {
          if (listData[i].foods[j].name === selectedItem.name) {
            listData[i].foods[j].number = number
          }
        }
      }
      var cartList = this.data.cartList
      var sum
      for (let i = 0; i < cartList.length; i++) {
        if (cartList[i].name === this.data.listData[type].foods[index].name) {
          sum = this.data.tolMoney - cartList[i].price
          cartList[i].sum -= cartList[i].price
          cartList[i].number === 1 ? cartList.splice(i, 1) : cartList[i].number--
        }
      }
      this.setData({
        listData: listData,
        cartList: cartList,
        tolMoney: sum,
        foodNumber: this.data.foodNumber - 1
      })
    }
    onHide() {
      if (this.data.sumMonney !== 0) {
        wepy.setStorageSync('cartList', this.data.cartList)
        wepy.setStorageSync('tolMoney', this.data.tolMoney)
        wepy.setStorageSync('foodNumber', this.data.foodNumber)
      }
    }
  }
</script>
